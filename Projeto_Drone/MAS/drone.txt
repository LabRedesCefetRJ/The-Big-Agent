serialPort(ttyEmulatedPort0).

maxAltitude(5.0).

!start.

//--------------- Loops Core ---------------

+!start <-
    .print("Conectando à porta serial...");
    .argo.port(ttyEmulatedPort0);
    .argo.percepts(open);
    .argo.limit(1000);
    .wait(2000);
    !takeoff;
.


+!getGps <-
	.argo.act(getpos);
.


//--------------- Fase de navegação ---------------

+!takeoff : not flying <- 
	.print("Decolando...");
	.argo.act(takeoff);
	.wait(500);
	+flying;
	.argo.act(setMaxAltitude(maxAltitude));
	.wait(1000);
	!subir_ate(maxAltitude)	
.

+!land : flying <- 
    .print("Pousando...");
    .argo.act(land);
    .wait(2000);
    -flying;
    .print("Drone pousado.")
.



//--------------- Subir ---------------

+!subir_ate(AlturaAlvo) <-
    .print("Subindo até altura ", AlturaAlvo);
    +meta_altura(AlturaAlvo);
    !loop_subida
.

+!loop_subida : gps(_, _, Z) & meta_altura(A) & (Z < (A - 0.1)) <- 
    	!printMetaDebug(Z, A);
	.argo.act(getpos);
	.argo.act(subindo);
 	.wait(200);
	!loop_subida
.

+!loop_subida : gps(_, _, Z) & meta_altura(A) & (Z >= (A - 0.1)) <- 
    .print("Altura desejada atingida.");
    -meta_altura(_);
    !andar_para_x(-3.0).

-!loop_subida : gps(_, _, Z) <- .print("Z atual: ", Z).




//--------------- Andar no eixo X (frente/trás) ---------------

+!andar_para_x(XAlvo) <-
    .print("Indo até X: ", XAlvo);
    +meta_x(XAlvo);
    !loop_andar_x.

+!loop_andar_x : gps(X, _, _) & meta_x(Xt) & (X < (Xt - 0.1)) <- 
    .print("Indo para frente...");
    .argo.act(getpos);
    .wait(200);
    !loop_andar_x
.

+!loop_andar_x : gps(X, _, _) & meta_x(Xt) & (X > (Xt + 0.1)) <- 
    .print("Indo para trás...");
    .argo.act(getpos);
    .wait(200);
    !loop_andar_x
.

+!loop_andar_x : gps(X, _, _) & meta_x(Xt) & (X >= (Xt - 0.1)) & (X <= (Xt + 0.1)) <- 
    .print("X desejado atingido.");
    -meta_x(_);
    !descer_para(0.3)
.


//--------------- Descer ---------------

+!descer_para(AlturaAlvo) <-
    .print("Descendo até ", AlturaAlvo);
    +meta_altura(AlturaAlvo);
    !loop_descida
.

+!loop_descida : gps(_, _, Z) & meta_altura(A) & (Z > (A + 0.1)) <- 
    .print("Descendoooo!");
    .argo.act(getpos);
    .wait(200);
    !loop_descida
.

+!loop_descida : gps(_, _, Z) & meta_altura(A) & (Z <= (A + 0.1)) <- 
    .print("Descida concluída.");
    -meta_altura(_);
    !land
.



//--------------- Debug ---------------


+gps(X, Y, Z) <- 
	.print("Primeira percepção recebida: gps(", X, ", ", Y, ", ", Z, ")")
.


+!posLoopdEBUG(X, Y, Z) <- 
	.print("Percepção recebida (loop debug): pos(", X, ", ", Y, ", ", Z, ")");
	.wait(1000);
	!pos(X, Y, Z)
.


+!printMetaDebug(Z, A) <-
	Check = A - 0.1;
	Valor = (Z < Check);
   .print("Posição Z: ", Z, "Meta altura: ", A, " " ,  Valor);
   .wait(1500)
.


